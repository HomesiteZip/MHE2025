import React, { useState } from 'react';
import { Home, Image, Music, FileText, Info } from 'lucide-react';

export default function MobileEventApp() {
  const [activeTab, setActiveTab] = useState('home');
  const [selectedEvent, setSelectedEvent] = useState(null);

  const events = [
    {
      id: 1,
      title: "Online/Offline: Best of The Webby's",
      location: "X Logan Square",
      date: "07.20.20",
      image: "https://images.unsplash.com/photo-1540575467063-178a50c2df87?w=800&q=80",
      color: "from-purple-400 to-pink-300"
    },
    {
      id: 2,
      title: "Attn Presents: Midterms",
      location: "X Houston",
      date: "07.20.20",
      image: "https://images.unsplash.com/photo-1541689221361-ad95003448db?w=800&q=80",
      color: "from-blue-500 to-blue-300"
    },
    {
      id: 3,
      title: "Private Tour of Ai Weiwei at Marciano Art Foundation",
      location: "Marciano Art",
      date: "07.25.20",
      image: "https://images.unsplash.com/photo-1567281622952-d4f31eec6f3b?w=800&q=80",
      color: "from-blue-700 to-blue-500",
      featured: true
    }
  ];

  const renderContent = () => {
    if (selectedEvent) {
      const event = events.find(e => e.id === selectedEvent);
      return (
        <div className="flex-1 overflow-y-auto pb-20">
          <div className={`relative h-screen bg-gradient-to-b ${event.color} p-6 flex flex-col justify-between`}>
            <button 
              onClick={() => setSelectedEvent(null)}
              className="absolute top-4 right-4 w-10 h-10 bg-white bg-opacity-20 backdrop-blur-sm rounded-lg flex items-center justify-center"
            >
              <svg className="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
              </svg>
            </button>
            
            <div className="pt-12">
              <p className="text-white text-sm font-medium mb-4">EVENT</p>
              <h1 className="text-white text-5xl font-bold leading-tight">{event.title}</h1>
            </div>
            
            <div className="space-y-4">
              <div 
                className="w-full h-64 bg-cover bg-center rounded-2xl"
                style={{backgroundImage: `url(${event.image})`}}
              />
              <div className="flex justify-center space-x-2">
                {[...Array(5)].map((_, i) => (
                  <div key={i} className={`w-2 h-2 rounded-full ${i === 0 ? 'bg-white' : 'bg-white bg-opacity-40'}`} />
                ))}
              </div>
            </div>
          </div>
        </div>
      );
    }

    switch(activeTab) {
      case 'home':
        return (
          <div className="flex-1 pb-20" style={{backgroundColor: '#FFF2DA'}}>
            <div 
              className="w-full h-full bg-cover bg-center"
              style={{backgroundImage: 'url(https://images.unsplash.com/photo-1514320291840-2e0a9bf2a9ae?w=1200&q=80)'}}
            />
          </div>
        );
      
      case 'photos':
        return (
          <div className="flex-1 flex items-center justify-center pb-20">
            <div className="text-center">
              <Image className="w-16 h-16 mx-auto mb-4 text-gray-300" />
              <p className="text-gray-500">사진 갤러리</p>
            </div>
          </div>
        );
      
      case 'music':
        return (
          <div className="flex-1 flex items-center justify-center pb-20">
            <div className="text-center">
              <Music className="w-16 h-16 mx-auto mb-4 text-gray-300" />
              <p className="text-gray-500">음악 라이브러리</p>
            </div>
          </div>
        );
      
      case 'sheet':
        return (
          <div className="flex-1 flex items-center justify-center pb-20">
            <div className="text-center">
              <FileText className="w-16 h-16 mx-auto mb-4 text-gray-300" />
              <p className="text-gray-500">악보 보관함</p>
            </div>
          </div>
        );
      
      case 'info':
        return (
          <div className="flex-1 flex items-center justify-center pb-20">
            <div className="text-center">
              <Info className="w-16 h-16 mx-auto mb-4 text-gray-300" />
              <p className="text-gray-500">정보</p>
            </div>
          </div>
        );
      
      default:
        return null;
    }
  };

  return (
    <div className="w-full h-screen bg-white flex flex-col max-w-md mx-auto relative">
      {/* Header */}
      {!selectedEvent && (
        <div className="bg-white border-b border-gray-200 px-4 py-4 flex items-center justify-center">
          <h1 className="text-2xl font-bold text-gray-800 tracking-wide">MAYBE HAPPY ENDING</h1>
        </div>
      )}

      {/* Content */}
      {renderContent()}

      {/* Bottom Navigation */}
      <div className="absolute bottom-0 left-0 right-0 bg-white border-t border-black px-6 py-3 flex justify-between items-center">
        <button 
          onClick={() => setActiveTab('home')}
          className={`p-3 ${activeTab === 'home' ? 'text-black' : 'text-gray-400'}`}
        >
          <Home className="w-6 h-6" />
        </button>
        <div className="w-px h-8 bg-black" />
        <button 
          onClick={() => setActiveTab('photos')}
          className={`p-3 ${activeTab === 'photos' ? 'text-black' : 'text-gray-400'}`}
        >
          <Image className="w-6 h-6" />
        </button>
        <div className="w-px h-8 bg-black" />
        <button 
          onClick={() => setActiveTab('music')}
          className={`p-3 ${activeTab === 'music' ? 'text-black' : 'text-gray-400'}`}
        >
          <Music className="w-6 h-6" />
        </button>
        <div className="w-px h-8 bg-black" />
        <button 
          onClick={() => setActiveTab('sheet')}
          className={`p-3 ${activeTab === 'sheet' ? 'text-black' : 'text-gray-400'}`}
        >
          <FileText className="w-6 h-6" />
        </button>
        <div className="w-px h-8 bg-black" />
        <button 
          onClick={() => setActiveTab('info')}
          className={`p-3 ${activeTab === 'info' ? 'text-black' : 'text-gray-400'}`}
        >
          <Info className="w-6 h-6" />
        </button>
      </div>
    </div>
  );
}
